import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

interface TutorialStep {
  id: number;
  title: string;
  content: string;
  image?: string;
  highlightElement?: string;
  action?: () => void;
}

const Tutorial: React.FC<{ onComplete: () => void; onSkip: () => void }> = ({ onComplete, onSkip }) => {
  const navigate = useNavigate();
  const [currentStep, setCurrentStep] = useState(0);
  const [isAnimating, setIsAnimating] = useState(false);

  const tutorialSteps: TutorialStep[] = [
    {
      id: 1,
      title: "ÎùºÎπÑÎ¶∞Ïä§ ÏïÑÏπ¥Îç∞ÎØ∏Ïóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§!",
      content: "Ïù¥Í≥≥ÏùÄ ÎßàÎ≤ïÍ≥º Î°úÎß®Ïä§Í∞Ä Í≥µÏ°¥ÌïòÎäî ÌäπÎ≥ÑÌïú ÌïôÏõêÏûÖÎãàÎã§. ÎãπÏã†Ïùò ÏÑ†ÌÉùÏù¥ Ïö¥Î™ÖÏùÑ Í≤∞Ï†ïÌï©ÎãàÎã§.",
      image: "üè´"
    },
    {
      id: 2,
      title: "Ï∫êÎ¶≠ÌÑ∞ ÏÉùÏÑ±",
      content: "Î®ºÏ†Ä ÎãπÏã†Ïùò Ï∫êÎ¶≠ÌÑ∞Î•º ÎßåÎì§Ïñ¥Î≥¥ÏÑ∏Ïöî. Ïù¥Î¶Ñ, ÏÑ±Î≥Ñ, Ïô∏Î™®Î•º ÏÑ†ÌÉùÌïòÍ≥† ÏãúÏûë Ïä§ÌÉØÏùÑ ÏÑ§Ï†ïÌï† Ïàò ÏûàÏäµÎãàÎã§.",
      image: "üë§",
      highlightElement: ".character-creation"
    },
    {
      id: 3,
      title: "Ïä§ÌÉØ ÏãúÏä§ÌÖú",
      content: "Ï≤¥Î†•(HP), ÎßàÎÇò(MP), Ìûò, ÏßÄÎä•, Îß§Î†•, Ïö¥ Îì± Îã§ÏñëÌïú Ïä§ÌÉØÏù¥ ÏûàÏäµÎãàÎã§. Í∞Å Ïä§ÌÉØÏùÄ Í≤åÏûÑ ÌîåÎ†àÏù¥Ïóê ÏòÅÌñ•ÏùÑ Ï§çÎãàÎã§.",
      image: "üìä"
    },
    {
      id: 4,
      title: "ÌûàÎ°úÏù∏Í≥ºÏùò ÎßåÎÇ®",
      content: "5Î™ÖÏùò Îß§Î†•Ï†ÅÏù∏ ÌûàÎ°úÏù∏Ïù¥ ÎãπÏã†ÏùÑ Í∏∞Îã§Î¶¨Í≥† ÏûàÏäµÎãàÎã§. Í∞ÅÏûê Í≥†Ïú†Ìïú ÏÑ±Í≤©Í≥º Ïä§ÌÜ†Î¶¨Î•º Í∞ÄÏßÄÍ≥† ÏûàÏ£†.",
      image: "üíï"
    },
    {
      id: 5,
      title: "Ìò∏Í∞êÎèÑ ÏãúÏä§ÌÖú",
      content: "ÎåÄÌôî, ÏÑ†Î¨º, Îç∞Ïù¥Ìä∏Î•º ÌÜµÌï¥ ÌûàÎ°úÏù∏Îì§Í≥ºÏùò Ìò∏Í∞êÎèÑÎ•º Ïò¨Î¶¥ Ïàò ÏûàÏäµÎãàÎã§. ÎÜíÏùÄ Ìò∏Í∞êÎèÑÎäî ÌäπÎ≥ÑÌïú Ïù¥Î≤§Ìä∏Î•º Ïó¥Ïñ¥Ï§çÎãàÎã§.",
      image: "‚ù§Ô∏è"
    },
    {
      id: 6,
      title: "ÏùºÏ†ï Í¥ÄÎ¶¨",
      content: "Îß§Ïùº ÏïÑÏπ®, Ï†êÏã¨, Ï†ÄÎÖÅÏúºÎ°ú ÎÇòÎâòÏñ¥ ÏûàÏäµÎãàÎã§. Í∞Å ÏãúÍ∞ÑÎåÄÏóê Îã§ÏñëÌïú ÌôúÎèôÏùÑ ÏÑ†ÌÉùÌï† Ïàò ÏûàÏäµÎãàÎã§.",
      image: "üìÖ"
    },
    {
      id: 7,
      title: "ÏàòÏóÖ Ï∞∏Ïó¨",
      content: "ÏàòÏóÖÏóê Ï∞∏Ïó¨ÌïòÏó¨ Ïä§ÌÉØÏùÑ Ïò¨Î¶¨Í≥† ÏÉàÎ°úÏö¥ Ïä§ÌÇ¨ÏùÑ Î∞∞Ïö∏ Ïàò ÏûàÏäµÎãàÎã§. ÏßëÏ§ëÎèÑÏóê Îî∞Îùº Ìö®Í≥ºÍ∞Ä Îã¨ÎùºÏßëÎãàÎã§.",
      image: "üìö"
    },
    {
      id: 8,
      title: "ÎçòÏ†Ñ ÌÉêÌóò",
      content: "ÌïôÏõê ÏßÄÌïòÏóêÎäî Ïã†ÎπÑÌïú ÎçòÏ†ÑÏù¥ ÏûàÏäµÎãàÎã§. Î™¨Ïä§ÌÑ∞Î•º Î¨ºÎ¶¨ÏπòÍ≥† Î≥¥Î¨ºÏùÑ Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî!",
      image: "‚öîÔ∏è",
      highlightElement: ".dungeon-button"
    },
    {
      id: 9,
      title: "Ï†ÑÌà¨ ÏãúÏä§ÌÖú",
      content: "ÌÑ¥Ï†ú Ï†ÑÌà¨ ÏãúÏä§ÌÖúÏúºÎ°ú Ï†ÑÎûµÏ†ÅÏù∏ Ï†ÑÌà¨Î•º Ï¶êÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§. Ïä§ÌÇ¨ÏùÑ Ï†ÅÏ†àÌûà ÏÇ¨Ïö©ÌïòÏó¨ ÏäπÎ¶¨ÌïòÏÑ∏Ïöî.",
      image: "üó°Ô∏è"
    },
    {
      id: 10,
      title: "ÏÉÅÏ†ê",
      content: "Í≥®ÎìúÎ°ú ÏïÑÏù¥ÌÖúÏùÑ Íµ¨Îß§Ìï† Ïàò ÏûàÏäµÎãàÎã§. ÏÑ†Î¨º, Ïû•ÎπÑ, ÏÜåÎπÑ ÏïÑÏù¥ÌÖú Îì± Îã§ÏñëÌïú ÏÉÅÌíàÏù¥ Ï§ÄÎπÑÎêòÏñ¥ ÏûàÏäµÎãàÎã§.",
      image: "üè™",
      highlightElement: ".shop-button"
    },
    {
      id: 11,
      title: "ÎØ∏ÎãàÍ≤åÏûÑ",
      content: "Ïπ¥Îìú Îß§Ïπ≠, ÌÄ¥Ï¶à Îì± Îã§ÏñëÌïú ÎØ∏ÎãàÍ≤åÏûÑÏùÑ Ï¶êÍ∏∏ Ïàò ÏûàÏäµÎãàÎã§. Î≥¥ÏÉÅÎèÑ Î∞õÏùÑ Ïàò ÏûàÏñ¥Ïöî!",
      image: "üéÆ"
    },
    {
      id: 12,
      title: "ÏóîÎî©",
      content: "ÎãπÏã†Ïùò ÏÑ†ÌÉùÏóê Îî∞Îùº Îã§ÏñëÌïú ÏóîÎî©ÏùÑ Î≥º Ïàò ÏûàÏäµÎãàÎã§. Í∞Å ÌûàÎ°úÏù∏Í≥ºÏùò ÌäπÎ≥ÑÌïú ÏóîÎî©ÎèÑ Ï§ÄÎπÑÎêòÏñ¥ ÏûàÏäµÎãàÎã§.",
      image: "üéä"
    },
    {
      id: 13,
      title: "Ï†ÄÏû• & Î∂àÎü¨Ïò§Í∏∞",
      content: "Ïñ∏Ï†úÎì†ÏßÄ Í≤åÏûÑÏùÑ Ï†ÄÏû•ÌïòÍ≥† ÎÇòÏ§ëÏóê Ïù¥Ïñ¥ÏÑú ÌîåÎ†àÏù¥Ìï† Ïàò ÏûàÏäµÎãàÎã§. ÏûêÎèô Ï†ÄÏû• Í∏∞Îä•ÎèÑ ÏûàÏäµÎãàÎã§.",
      image: "üíæ"
    },
    {
      id: 14,
      title: "ÌåÅ",
      content: "‚Ä¢ Îß§Ïùº ÌûàÎ°úÏù∏Í≥º ÎåÄÌôîÌïòÏÑ∏Ïöî\n‚Ä¢ Ïä§ÌÉØÏùÑ Í∑†ÌòïÏûàÍ≤å Ïò¨Î¶¨ÏÑ∏Ïöî\n‚Ä¢ ÎçòÏ†ÑÏóêÏÑú Î†àÎ≤®ÏóÖÏùÑ ÏûäÏßÄ ÎßàÏÑ∏Ïöî\n‚Ä¢ Ïù¥Î≤§Ìä∏Î•º ÎÜìÏπòÏßÄ ÎßàÏÑ∏Ïöî",
      image: "üí°"
    },
    {
      id: 15,
      title: "Î™®ÌóòÏùÑ ÏãúÏûëÌïòÏÑ∏Ïöî!",
      content: "Ïù¥Ï†ú ÎùºÎπÑÎ¶∞Ïä§ ÏïÑÏπ¥Îç∞ÎØ∏ÏóêÏÑúÏùò Î™®ÌóòÏùÑ ÏãúÏûëÌï† Ï§ÄÎπÑÍ∞Ä ÎêòÏóàÏäµÎãàÎã§. ÌñâÏö¥ÏùÑ ÎπïÎãàÎã§!",
      image: "üöÄ",
      action: () => {
        onComplete();
        navigate('/character-creation');
      }
    }
  ];

  const nextStep = () => {
    if (currentStep < tutorialSteps.length - 1) {
      setIsAnimating(true);
      setTimeout(() => {
        setCurrentStep(currentStep + 1);
        setIsAnimating(false);
      }, 300);
    } else {
      tutorialSteps[currentStep].action?.();
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setIsAnimating(true);
      setTimeout(() => {
        setCurrentStep(currentStep - 1);
        setIsAnimating(false);
      }, 300);
    }
  };

  const skipTutorial = () => {
    if (window.confirm('ÌäúÌÜ†Î¶¨ÏñºÏùÑ Í±¥ÎÑàÎõ∞ÏãúÍ≤†ÏäµÎãàÍπå? ÎÇòÏ§ëÏóê ÏÑ§Ï†ïÏóêÏÑú Îã§Ïãú Î≥º Ïàò ÏûàÏäµÎãàÎã§.')) {
      onSkip();
      navigate('/character-creation');
    }
  };

  useEffect(() => {
    // Highlight element if specified
    const step = tutorialSteps[currentStep];
    if (step.highlightElement) {
      const element = document.querySelector(step.highlightElement);
      if (element) {
        element.classList.add('tutorial-highlight');
        return () => {
          element.classList.remove('tutorial-highlight');
        };
      }
    }
  }, [currentStep]);

  return (
    <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-hidden">
        {/* Progress Bar */}
        <div className="bg-gray-200 h-2">
          <div
            className="bg-gradient-to-r from-purple-500 to-pink-500 h-full transition-all duration-500"
            style={{ width: `${((currentStep + 1) / tutorialSteps.length) * 100}%` }}
          />
        </div>

        {/* Content */}
        <div className={`p-8 transition-opacity duration-300 ${isAnimating ? 'opacity-0' : 'opacity-100'}`}>
          {/* Step Counter */}
          <div className="flex justify-between items-center mb-6">
            <span className="text-sm font-semibold text-gray-500">
              Îã®Í≥Ñ {currentStep + 1} / {tutorialSteps.length}
            </span>
            <button
              onClick={skipTutorial}
              className="text-sm text-gray-500 hover:text-gray-700 underline"
            >
              Í±¥ÎÑàÎõ∞Í∏∞
            </button>
          </div>

          {/* Main Content */}
          <div className="text-center mb-8">
            {tutorialSteps[currentStep].image && (
              <div className="text-6xl mb-6 animate-bounce">
                {tutorialSteps[currentStep].image}
              </div>
            )}
            <h2 className="text-3xl font-bold mb-4 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              {tutorialSteps[currentStep].title}
            </h2>
            <p className="text-lg text-gray-700 whitespace-pre-line leading-relaxed">
              {tutorialSteps[currentStep].content}
            </p>
          </div>

          {/* Navigation */}
          <div className="flex justify-between items-center">
            <button
              onClick={prevStep}
              disabled={currentStep === 0}
              className={`
                px-6 py-3 rounded-lg font-semibold transition-all
                ${currentStep === 0
                  ? 'bg-gray-200 text-gray-400 cursor-not-allowed'
                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }
              `}
            >
              Ïù¥Ï†Ñ
            </button>

            <div className="flex gap-2">
              {tutorialSteps.map((_, index) => (
                <button
                  key={index}
                  onClick={() => {
                    if (index <= currentStep) {
                      setCurrentStep(index);
                    }
                  }}
                  className={`
                    w-2 h-2 rounded-full transition-all
                    ${index === currentStep
                      ? 'w-8 bg-gradient-to-r from-purple-500 to-pink-500'
                      : index < currentStep
                      ? 'bg-purple-300 cursor-pointer hover:bg-purple-400'
                      : 'bg-gray-300'
                    }
                  `}
                />
              ))}
            </div>

            <button
              onClick={nextStep}
              className="px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg font-semibold hover:shadow-lg transition-all transform hover:scale-105"
            >
              {currentStep === tutorialSteps.length - 1 ? 'ÏãúÏûëÌïòÍ∏∞' : 'Îã§Ïùå'}
            </button>
          </div>
        </div>
      </div>

      <style>{`
        .tutorial-highlight {
          position: relative;
          z-index: 51;
          box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);
          animation: pulse 2s infinite;
        }

        @keyframes pulse {
          0% {
            box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);
          }
          50% {
            box-shadow: 0 0 20px 9999px rgba(0, 0, 0, 0.3);
          }
          100% {
            box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);
          }
        }
      `}</style>
    </div>
  );
};

export default Tutorial;